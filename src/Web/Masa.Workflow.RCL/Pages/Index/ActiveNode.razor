@namespace Masa.Workflow.RCL.Pages
@inject IJSRuntime JSRuntime

<div class="d-flex align-center"
     @onclick="@OnClick">
    <div>
        <MIcon Class="rounded" Dark
               Style="@($"background-color: {@Data.Color}")">
            @Data.Icon
        </MIcon>
        @Data.Label
    </div>
    @if (Data.Type == TreeNodeType.Node)
    {
        <MSpacer />
        <div>
            <MButton OnClick="@EditNode"
                     OnClickStopPropagation
                     Icon Small>
                <MIcon Small>mdi-square-edit-outline</MIcon>
            </MButton>
            <MButton OnClick="@CenterNode"
                     OnClickStopPropagation
                     Icon Small>
                <MIcon Small>mdi-crosshairs</MIcon>
            </MButton>
        </div>
    }
</div>

@code {

    [Parameter]
    [EditorRequired]
    public TreeNode Data { get; set; } = null!;

    [Parameter]
    [EditorRequired]
    public MDrawflow Drawflow { get; set; } = null!;

    private string? prevDataKey;
    private bool shouldRender;

    protected override void OnParametersSet()
    {
        base.OnParametersSet();

        shouldRender = Data.Key != prevDataKey;

        prevDataKey = Data.Key;
    }

    protected override bool ShouldRender() => shouldRender;

    private async Task OnClick()
    {
        if (Data.Type == TreeNodeType.Node)
        {
            await Drawflow.FocusNodeAsync(Data.Key);
        }
    }

    private async Task EditNode()
    {
        if (Data.Type == TreeNodeType.Node)
        {
            await JSRuntime.InvokeVoidAsync(JSInteropConstants.DblclickDrawflowNode, Data.Key);
        }
    }

    private async Task CenterNode()
    {
        await Drawflow.CenterNodeAsync(Data.Key);
    }

}
