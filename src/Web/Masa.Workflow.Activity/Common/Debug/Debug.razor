@inherits Masa.Workflow.ActivityCore.Components.ActivityNode<DebugMeta>

@base.BuildRenderTree

@code {

    protected override void DrawerContent(RenderTreeBuilder __builder)
    {
        <MRow>
            <MCol Cols="3">
                输出
            </MCol>
            <MCol Cols="9">
                <MTextField @bind-Value="DebugOutput" Solo>
                </MTextField>
            </MCol>
        </MRow>
        <MRow>
            <MCol Cols="3">
                目标
            </MCol>
            <MCol Cols="9">
                <MCheckbox @bind-Value="DebugToSidebar"
                           Label="调试窗口"
                           HideDetails="true"
                           Color="primary"></MCheckbox>
                <MCheckbox @bind-Value="DebugToConsole"
                           Label="控制台"
                           HideDetails="true"
                           Color="primary"></MCheckbox>
            </MCol>
        </MRow>
        <MRow>
            <MCol Cols="3">
                名称
            </MCol>
            <MCol Cols="9">
                <MTextField @bind-Value="NodeName"
                                    Solo>
                </MTextField>
            </MCol>
        </MRow>
    }

    // [CascadingParameter] public Masa.Workflow.RCL.Pages.Workspace.MainLayout MainLayout { get; set; }

    private string? DebugOutput { get; set; }
    private string? NodeName { get; set; }
    private bool DebugToSidebar { get; set; }
    private bool DebugToConsole { get; set; }

    private List<FlowNode> _flowNodes = new();

    private List<StringNumber> ComputedValues
        => FormModel.MetaData.DependentIds is null
            ? new List<StringNumber>()
            : FormModel.MetaData.DependentIds.Select(u => (StringNumber)u.ToString()).ToList();

    protected override async Task OnBeforeDrawerOpenAsync()
    {
        var json = await DrawflowService.ExportAsync();

        if (json is null)
        {
            return;
        }

        _flowNodes = DrawflowJsonHelper.ParseToFlowNodeList(json);
    }

    private void ValuesChanged(List<StringNumber?> values)
    {
        FormModel.MetaData.DependentIds = values.Select(u => Guid.Parse(u!.AsT0)).ToArray();
    }

}
